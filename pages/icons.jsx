import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { useState } from 'react'
import styles from '../styles/Icons.module.css'
import { Row, Portion, Select, Text, InfoPanel, Card, Element } from 'fictoan-react'

export default function Icons() {
    const iconsArray = [
        {
            "fileName": "ic_send_money",
            "iconName": "Send money",
            "nomenclature": ["Pay", "Send", "Pay money", "Send money", "Give  money"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_recieve_money",
            "iconName": "Receive money",
            "nomenclature": ["Request / Receive money"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_bank_transfer",
            "iconName": "Bank transfer",
            "nomenclature": ["Bank transfer"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_UPI_id",
            "iconName": "Pay to UPI id",
            "nomenclature": ["Pay to UPI id"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_self_transfer",
            "iconName": "Pay to self",
            "nomenclature": ["Pay to self"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_to_contact",
            "iconName": "Pay to contact",
            "nomenclature": ["Pay to contact"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_qr",
            "iconName": "Scan QR",
            "nomenclature": ["Scan QR"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_view_transaction_history",
            "iconName": "Transction history",
            "nomenclature": ["Transction history"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_check_balance",
            "iconName": "Check balance",
            "nomenclature": ["Check balance"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_success",
            "iconName": "Success",
            "nomenclature": ["Success"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_failure",
            "iconName": "Failure",
            "nomenclature": ["Failure"],
            "notes": "Whatever"
        },
        {
            "fileName": "ic_pending",
            "iconName": "Pending",
            "nomenclature": ["Pending", "Not pending"],
            "notes": "Whatever"
        },
    ];

    const [strokeSize, setStrokeSize] = useState("s1");
    const [cornerRadius, setCornerRadius] = useState("r0");
    const [edges, setEdges] = useState("sharp");
    const [size, setSize] = useState("24");
    const [clickedIcon, setClickedIcon] = useState("");



    return (
        <div>
            <Head>
                <title>Icons</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Row sidePadding="huge" padding="nano" marginTop="small" marginBottom="small" gutters="huge">
                <Portion desktopSpan="6" tabletLandscapeSpan="6" tabletPortraitSpan="12" mobileSpan="12">
                    <Select
                        onChange={function (e) {
                            console.log(e.target.value)
                            if (e.target.value == "1px")
                                setStrokeSize("s1")
                            if (e.target.value == "1.5px")
                                setStrokeSize("s1.5")
                            if (e.target.value == "2px")
                                setStrokeSize("s2")
                        }}
                        id="stroke-size"
                        label="Stroke size"
                        options={[
                            {
                                label: "1px",
                                value: "1px"
                            },
                            {
                                label: "1.5px",
                                value: "1.5px"
                            },
                            {
                                label: "2px",
                                value: "2px"
                            },
                        ]}
                    />
                </Portion>
                <Portion desktopSpan="6" tabletLandscapeSpan="6" tabletPortraitSpan="12" mobileSpan="12">
                    <Select
                        onChange={function (e) {
                            console.log(e.target.value)
                            if (e.target.value == "0px")
                                setCornerRadius("r0")
                            if (e.target.value == "2px")
                                setCornerRadius("r2")
                            if (e.target.value == "3px")
                                setCornerRadius("r3")
                        }}
                        id="corner-radius"
                        label="Corner radius"
                        options={[
                            {
                                label: "0px",
                                value: "0px"
                            },
                            {
                                label: "2px",
                                value: "2px"
                            },
                            {
                                label: "3px",
                                value: "3px"
                            },
                        ]}
                    />
                </Portion>
                <Portion desktopSpan="6" tabletLandscapeSpan="6" tabletPortraitSpan="12" mobileSpan="12">
                    <Select
                        onChange={function (e) {
                            setEdges(e.target.value)
                        }}
                        id="edges"
                        label="Edges"
                        options={[
                            {
                                label: "sharp",
                                value: "sharp"
                            },
                            {
                                label: "soft",
                                value: "soft"
                            },
                        ]}
                    />
                </Portion>
                <Portion desktopSpan="6" tabletLandscapeSpan="6" tabletPortraitSpan="12" mobileSpan="12">
                    <Select
                        id="size"
                        label="Size"
                        options={[
                            {
                                label: "24px",
                                value: "24px"
                            },
                        ]}
                    />
                </Portion>
            </Row>

            <Row sidePadding="huge" gutters="medium">
                {iconsArray.map(item =>
                    <Portion desktopSpan="6" tabletLandscapeSpan="6" tabletPortraitSpan="8" mobileSpan="12" padding="nano" style={{ wordWrap: "break-word" }} >
                        <Card
                            // borderColour="slate-30"
                            bgColor="slate-10"
                            shape="rounded"
                        >
                            <a
                                href={`/icons/${strokeSize}_${cornerRadius}_${edges}/${item.fileName}_${size}_${strokeSize}_${cornerRadius}_${edges}.svg`}
                                download={`/icons/${strokeSize}_${cornerRadius}_${edges}/${item.fileName}_${size}_${strokeSize}_${cornerRadius}_${edges}.svg`}>
                                <img
                                    src={`/icons/${strokeSize}_${cornerRadius}_${edges}/${item.fileName}_${size}_${strokeSize}_${cornerRadius}_${edges}.svg`}
                                    alt={`${item.fileName}_${size}_${strokeSize}_${cornerRadius}_${edges}.svg`} />
                            </a>

                            <Card shadow="mild" shape="rounded"
                            >
                                <Text weight="600" align="center" marginTop="micro" marginBottom="micro">{item.iconName} &rarr;</Text>
                                {/* <Text align="center" marginTop="nano">Read more &rarr;</Text> */}
                            </Card>
                        </Card>
                        <InfoPanel>
                            <Text as="h5" marginBottom="micro">{item.iconName}</Text>
                            <Element
                                as="div"
                                marginBottom="micro"
                            >
                                <Text marginBottom="none" weight="600">Related terms:</Text>
                                {item.nomenclature.map(terms =>
                                    <Text marginTop="none" marginBottom="none">{terms}</Text>
                                )}
                            </Element>
                            <Text marginBottom="none" weight="600">Usage recommendations:</Text>
                            <Text marginTop="none" marginBottom="micro">{item.notes}</Text>
                        </InfoPanel>
                    </Portion>)}
            </Row>



        </div >
    )
}
